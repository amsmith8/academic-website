B$Buffer <- c( "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" ,
"Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" )
B
A
A <- data.frame(auc = c( final_auc_Boar_1000km , final_auc_Kudzu_1000km, final_auc_Ladybird_1000km,final_auc_Parakeet_1000km,
final_auc_Boar_global , final_auc_Kudzu_global, final_auc_Ladybird_global,final_auc_Parakeet_global ) ,
species = c( "Boar" , "Kudzu" , "Ladybird" , " Parakeet" ) ,
Model = "DLNN ",
Buffer = c("1000km" , "1000km" , "1000km" , "1000km" , "Global" , "Global" , "Global" , "Global" ))
B <- rbind( readRDS("./Results_static_models/Static_model_bioclim_imbalanced_results_Boar_1000km.rds")[,-2] ,
readRDS("./Results_static_models/Static_model_bioclim_imbalanced_results_Kudzu_1000km.rds")[,-2] ,
readRDS("./Results_static_models/Static_model_bioclim_imbalanced_results_Ladybird_1000km.rds")[,-2] ,
readRDS("./Results_static_models/Static_model_bioclim_imbalanced_results_Parakeet_1000km.rds")[,-2] ,
readRDS("./Results_static_models/Static_model_bioclim_imbalanced_results_Boar_global.rds")[,-2] ,
readRDS("./Results_static_models/Static_model_bioclim_imbalanced_results_Kudzu_global.rds")[,-2] ,
readRDS("./Results_static_models/Static_model_bioclim_imbalanced_results_Ladybird_global.rds")[,-2] ,
readRDS("./Results_static_models/Static_model_bioclim_imbalanced_results_Parakeet_global.rds")[,-2]
)
B$Model <- c( "GBM" , "MaxEnt" , "RF" )
B$Buffer <- c( "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" , "1000km" ,
"Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" , "Global" )
C <- rbind( A , B  )
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer",
size = 2
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
#legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
#legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
#legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = c("Buffer", 19,2)
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "None",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Buffer",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Buffer",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Buffer",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
#add = "jitter" ,
fill = "Buffer",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
#legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
#legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "Buffer",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
#add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "dotplot" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC" ,
notch = T
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC"
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC",
facet.by = "Buffer"
#shape = "Buffer"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC",
facet.by = "Buffer"
shape = "species"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC",
facet.by = "Buffer",
shape = "species"
)
ggboxplot( C , x = "Model", y = "auc" ,
width = 0.8 ,
add = "jitter" ,
fill = "Model",
palette = c( "forestgreen" ," goldenrod2" , "cornflowerblue", "darkorange" ) ,
ylim = c( 0.8 , 1 ),
legend = "none",
main = "Comparison of algorithm test results" ,
xlab = "" ,
ylab = "AUC",
facet.by = "Buffer"
)
bio12 <- environmental_data$bio12
D <- data.frame(x = c(79.89583) ,
y = c(28.43750) )
prec_time_steps_D <- extract( prec_stack , D )
# Upload packages and files
library("caret")
library("dismo")
library("rgdal")
library("raster")
library("ROSE")
library("tictoc")
library("dplyr")
# Input values
alt <- raster( "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_elev.tif" )
environmental_data <- stack( list_to_stack( list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2",full.names= TRUE, pattern = ".tif") ), alt ) # adds 'alt' to bioclim stack
names(environmental_data) <-  c( "bio1" ,  "bio10" , "bio11" , "bio12" , "bio13" , "bio14" , "bio15" , "bio16" , "bio17" , "bio18" , "bio19" , "bio2" , "bio3" , "bio4" , "bio5" , "bio6" , "bio7" , "bio8" , "bio9" , "elev" )
#plot(environmental_data , main = "")
#plot( environmental_data , xlim = c(-82.889099,-82.331543 ) , ylim = c( 27.597152,28.103481 ) , nc=6, maxnl=32)
# Example point - USF
usf_pt <- data.frame( lon = c(-82.415 ),
lat = c(28.0605)
)
static_extract <- extract( environmental_data , usf_pt )
colnames( static_extract )  <- c( "bio1" ,  "bio10" , "bio11" , "bio12" , "bio13" , "bio14" , "bio15" , "bio16" , "bio17" , "bio18" , "bio19" , "bio2" , "bio3" , "bio4" , "bio5" , "bio6" , "bio7" , "bio8" , "bio9" , "elev" )
At_pts <- usf_pt
#__________________________
# Precipitation data
#__________________________
tic( "prec-70s" )
# 1970s
prec_1970s <- list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_prec_1970-1979" , full.names= TRUE , pattern = ".tif" )
prec_1980s <- list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_prec_1980-1989" , full.names = TRUE , pattern = ".tif" )
prec_1990s <- list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_prec_1990-1999" , full.names = TRUE , pattern = ".tif" )
prec <- c( prec_1970s , prec_1980s , prec_1990s )
prec_stack <- raster::stack()
for (i in 1:length( prec ) ){
r <- raster( prec[ i ] )
prec_stack <- raster::stack( prec_stack , r )
}
prec_time_steps <- extract( prec_stack , usf_pt )
plot(x = ( 1:360 ) , y = prec_time_steps[ 1 , ] , type = "l" , main = "USF monthly precipitation (1970 - 2000)",  xlab = "Time-step" , ylab = "Prec (mm)" )
# abline ( h = static_extract[,5], col = "red" ) # bio13
# abline ( h = static_extract[,6], col = "red" ) # bio14
# abline ( h = static_extract[,7], col = "red" ) # bio15
# abline ( h = static_extract[,8], col = "red" ) # bio16
# abline ( h = static_extract[,9], col = "red" ) # bio17
# abline ( h = static_extract[,10], col = "red" ) # bio18
# abline ( h = static_extract[,10], col = "red" ) # bio19
#__________________________
# Temperature (max) data
#__________________________
tmax_1970s <- list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_tmax_1970-1979" , full.names = TRUE , pattern = ".tif" )
tmax_1980s <- list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_tmax_1980-1989" , full.names = TRUE, pattern = ".tif" )
tmax_1990s <- list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_tmax_1990-1999" , full.names = TRUE , pattern = ".tif" )
tmax <- c(tmax_1970s , tmax_1980s , tmax_1990s )
tmax_stack <- raster::stack()
for (i in 1:length( tmax ) ){
r <- raster( tmax[ i ] )
tmax_stack <- raster::stack( tmax_stack , r )
}
tmax_time_steps <- extract( tmax_stack ,usf_pt )
plot(x = ( 1:360 ) , y = tmax_time_steps[ 1 , ] , type = "l" , main =" USF monthly maximum temperature (1970 - 2000)",  xlab = "Time-step" , ylab = "Temp (°C)" , col = "red"  )
#__________________________
# Temperature (min) data
#__________________________
tmin_1970s <- list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_tmin_1970-1979" , full.names = TRUE , pattern = ".tif" )
tmin_1980s <- list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_tmin_1980-1989" , full.names = TRUE, pattern = ".tif" )
tmin_1990s <- list.files( path = "/Users/amsmith/Documents/WC2_for_deep_learning/wc2.1_2.5m_tmin_1990-1999" , full.names = TRUE , pattern = ".tif" )
tmin <- c(tmin_1970s , tmin_1980s , tmin_1990s )
tmin_stack <- raster::stack()
for (i in 1:length( tmin ) ){
r <- raster( tmin[ i ] )
tmin_stack <- raster::stack( tmin_stack , r )
}
tmin_time_steps <- extract( tmin_stack ,usf_pt )
plot(x = ( 1:360 ) , y = tmin_time_steps[ 1 , ] , type = "l" , main = " USF monthly minimum temperature (1970 - 2000)",  xlab = "Time-step" , ylab = "Temp (°C)" , col = "blue" )
x_steps = ( 1:360 )
# par(mfrow=c(3,1) )
# plot(x = x_steps , y = prec_time_steps[ 1 , ] , type = "l" ,  xlab = "Time-step" , ylab = "Prec (mm)" , main ="Monthly Precipitation" ,  font.main = 1 )
# plot(x = x_steps , y = tmax_time_steps[ 1 , ] , type = "l" , main = "Maximum Temperature" ,  font.main = 1 ,  xlab = "Time-step" , ylab = "Temp (°C)" , col = "red" , ylim = c(0,35) )
# plot(x = x_steps , y = tmin_time_steps[ 1 , ] , type = "l" , main = "Minimum Temperature" ,  font.main = 1 , xlab = "Time-step" , ylab = "Temp (°C)" , col = "blue" , ylim = c(0,35 ) )
# mtext("University of South Florida WorldClim Data (1970 - 2000)", side = 3, line = -1.5, outer = TRUE)
data1 <- data.frame(x_steps , prec_time_steps[ 1 , ] )
data2 <- data.frame(x_steps , tmax_time_steps[ 1 , ] )
data3 <- data.frame(x_steps , tmin_time_steps[ 1 , ] )
prec_time_steps_D <- extract( prec_stack , D )
D <- data.frame(x = c(79.89583) ,
y = c(28.43750) )
plot(x = ( 1:120 ) , y = prec_time_steps_D[ 1 ,241:360 ], type = "l")
lines(x = ( 1:120 ) , y = prec_time_steps[ 1 ,241:360 ], col = "red")
plot(x = ( 1:120 ) , y = prec_time_steps_D[ 1 ,241:360 ], type = "l", xlab = "Time-step" , ylab = "Prec (mm)" )
lines(x = ( 1:120 ) , y = prec_time_steps[ 1 ,241:360 ], col = "red")
plot(x = ( 1:120 ) , y = prec_time_steps_D[ 1 ,241:360 ], type = "l", xlab = "Time-step" , ylab = "Prec (mm)", main = "Monthly Precipitation (1990-2000")
lines(x = ( 1:120 ) , y = prec_time_steps[ 1 ,241:360 ], col = "red")
plot(x = ( 1:120 ) , y = prec_time_steps_D[ 1 ,241:360 ], type = "l", xlab = "Time-step" , ylab = "Prec (mm)", main = "Monthly Precipitation (1990-2000"))
lines(x = ( 1:120 ) , y = prec_time_steps[ 1 ,241:360 ], col = "red")
plot(x = ( 1:120 ) , y = prec_time_steps_D[ 1 ,241:360 ], type = "l", xlab = "Time-step" , ylab = "Prec (mm)", main = "Monthly Precipitation (1990-2000)" )
lines(x = ( 1:120 ) , y = prec_time_steps[ 1 ,241:360 ], col = "red")
plot(x = ( 1:120 ) , y = prec_time_steps_D[ 1 ,241:360 ], type = "l", xlab = "Time-step" , ylab = "Prec (mm)", main = "Monthly Precipitation (1990-2000)" )
lines(x = ( 1:120 ) , y = prec_time_steps[ 1 ,241:360 ], col = "red")
legend(1, 95, legend=c("India", "Tampa, FL"),
col=c("black", "red"), lty=1:2, cex=0.8)
legend(100, 550, legend=c("India", "Tampa, FL"),
col=c("black", "red"), lty=1:2, cex=0.8)
legend(80, 600, legend=c("India", "Tampa, FL"),
col=c("black", "red"), lty=1:2, cex=0.8)
legend(90, 600, legend=c("India", "Tampa, FL"),
col=c("black", "red"), lty=1:2, cex=0.8)
plot(x = ( 1:120 ) , y = prec_time_steps_D[ 1 ,241:360 ], type = "l", xlab = "Time-step" , ylab = "Prec (mm)", main = "Monthly Precipitation (1990-2000)" )
lines(x = ( 1:120 ) , y = prec_time_steps[ 1 ,241:360 ], col = "red")
legend(90, 600, legend=c("India", "Tampa, FL"),
col=c("black", "red"), lty=1, cex=1)
setwd("~/Documents/GitHub/academic-website")
